// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using auth.data;

namespace auth.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210208114938_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("auth.entity.Adresse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("codePostal")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("codePostal");

                    b.Property<string>("complement")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("complement");

                    b.Property<string>("pays")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("pays");

                    b.Property<string>("rue")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("rue");

                    b.Property<string>("ville")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("ville");

                    b.HasKey("id");

                    b.ToTable("adresse");
                });

            modelBuilder.Entity("auth.entity.Franchise", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("designation")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasColumnName("designation");

                    b.Property<int>("idAdresse")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idAdresse");

                    b.ToTable("franchise");
                });

            modelBuilder.Entity("auth.entity.Franchise", b =>
                {
                    b.HasOne("auth.entity.Adresse", "adresse")
                        .WithMany("franchises")
                        .HasForeignKey("idAdresse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("adresse");
                });

            modelBuilder.Entity("auth.entity.Adresse", b =>
                {
                    b.Navigation("franchises");
                });
#pragma warning restore 612, 618
        }
    }
}
